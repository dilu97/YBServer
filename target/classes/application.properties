#==== connect to mysql ======#
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/yourbooking?useSSL=false
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect


#spring.datasource.url=jdbc:postgres://nebkcfmfzyckqd:10e67ad03dec14c749d57cd951072935b79f9a8a351ed4ed7adee69f5fa42a6f@ec2-54-247-92-167.eu-west-1.compute.amazonaws.com:5432/d9dumup64bonfj
#spring.datasource.username=nebkcfmfzyckqd
#spring.datasource.password=10e67ad03dec14c749d57cd951072935b79f9a8a351ed4ed7adee69f5fa42a6f

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.h2.console.enabled=true
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
spring.session.timeout.seconds=900



# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update
